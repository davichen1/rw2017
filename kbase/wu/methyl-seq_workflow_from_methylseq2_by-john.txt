Samples / Reads

// two pools of 8 samples each

// in ~/MethylSeq2/Kong_pool1_20160721
$ for file in *.gz; do echo -n `basename $file`; echo -en "\t"; zcat $file | echo $((`wc -l`/4)); done
12wk_ko1_S3_R1_001.fastq.gz	30608010
12wk_ko2_S4_R1_001.fastq.gz	28015103
12wk_wt1_S1_R1_001.fastq.gz	30465731
12wk_wt2_S2_R1_001.fastq.gz	31727717
20wk_ko1_S7_R1_001.fastq.gz	33858238
20wk_ko2_S8_R1_001.fastq.gz	34673619
20wk_wt1_S5_R1_001.fastq.gz	31011659
20wk_wt2_S6_R1_001.fastq.gz	27500343

// in ~/MethylSeq2/Kong_pool2_20160721
$ for file in *.gz; do echo -n `basename $file`; echo -en "\t"; zcat $file | echo $((`wc -l`/4)); done
1_day_UVB-1_S7_R1_001.fastq.gz	28872393
1_day_UVB-2_S8_R1_001.fastq.gz	26178090
1_wk_Ctrl-1_S1_R1_001.fastq.gz	33233637
1_wk_Ctrl-2_S2_R1_001.fastq.gz	28810810
1_wk_UAH_UVB-3_S5_R1_001.fastq.gz	28424812
1_wk_UAH_UVB-4_S6_R1_001.fastq.gz	26805411
1_wk_UVB-2_S3_R1_001.fastq.gz	29406096
1_wk_UVB-3_S4_R1_001.fastq.gz	25511293

// single-end Illumina 75-bp reads


// henceforth referred to as <sample>_<time>_<replicate>:
KO_12_0	12wk_ko1_S3_R1_001.fastq.gz
KO_12_1	12wk_ko2_S4_R1_001.fastq.gz
WT_12_0	12wk_wt1_S1_R1_001.fastq.gz
WT_12_1	12wk_wt2_S2_R1_001.fastq.gz
KO_20_0	20wk_ko1_S7_R1_001.fastq.gz
KO_20_1	20wk_ko2_S8_R1_001.fastq.gz
WT_20_0	20wk_wt1_S5_R1_001.fastq.gz
WT_20_1	20wk_wt2_S6_R1_001.fastq.gz
UVB_0_0	1_day_UVB-1_S7_R1_001.fastq.gz
UVB_0_1	1_day_UVB-2_S8_R1_001.fastq.gz
Ctrl_1_0	1_wk_Ctrl-1_S1_R1_001.fastq.gz
Ctrl_1_1	1_wk_Ctrl-2_S2_R1_001.fastq.gz
UAH-UVB_1_0	1_wk_UAH_UVB-3_S5_R1_001.fastq.gz
UAH-UVB_1_1	1_wk_UAH_UVB-4_S6_R1_001.fastq.gz
UVB_1_0	1_wk_UVB-2_S3_R1_001.fastq.gz
UVB_1_1	1_wk_UVB-3_S4_R1_001.fastq.gz

/////////////////////////////////////////////////////////////

// align with my (fixed) version of bismark

$ /home/john/tools/Bismark/bismark \
  --output_dir Ctrl_1_0 --basename Ctrl_1_0 --temp_dir temp \
  --un --ambiguous --ambig_bam  \
  /home/john/genomes/Mus_musculus/UCSC/mm9/Sequence/WholeGenomeFasta \
  Kong_pool2_20160721/1_wk_Ctrl-1_S1_R1_001.fastq.gz

// produce .cov file directly from .bam:
$ samtools view -h Ctrl_1_0.bam | python ~/rutgers/SAMtoCOV.py - Ctrl_1_0.cov

// -- repeat for other samples --

// merge .cov files for UA samples
$ python ~/rutgers/combineRegions2.py \
  -r 3 -s 3 -d 100 -c 3 -m 10 -v \
  -o comb_UAH.csv \
  Ctrl_1_0/Ctrl_1_0.cov Ctrl_1_1/Ctrl_1_1.cov \
  UVB_0_0/UVB_0_0.cov UVB_0_1/UVB_0_1.cov \
  UVB_1_0/UVB_1_0.cov UVB_1_1/UVB_1_1.cov \
  UAH-UVB_1_0/UAH-UVB_1_0.cov UAH-UVB_1_1/UAH-UVB_1_1.cov
Regions printed: 192170


// merge .cov files for KO samples
$ python ~/rutgers/combineRegions2.py \
  -r 3 -s 3 -d 100 -c 3 -m 10 -v \
  -o comb_KO.csv \
  KO_12_0/KO_12_0.cov KO_12_1/KO_12_1.cov \
  KO_20_0/KO_20_0.cov KO_20_1/KO_20_1.cov \
  WT_12_0/WT_12_0.cov WT_12_1/WT_12_1.cov \
  WT_20_0/WT_20_0.cov WT_20_1/WT_20_1.cov 
Regions printed: 197479



//////////////////////////////////////////////////////////////////


// merge .cov files for all the samples
$ python ~/rutgers/combineRegions2.py \
  -r 3 -s 4 -d 100 -c 3 -m 10 -o comb.csv -v \
  KO_12_0/KO_12_0.cov KO_12_1/KO_12_1.cov \
  KO_20_0/KO_20_0.cov KO_20_1/KO_20_1.cov \
  WT_12_0/WT_12_0.cov WT_12_1/WT_12_1.cov \
  WT_20_0/WT_20_0.cov WT_20_1/WT_20_1.cov \
  Ctrl_1_0/Ctrl_1_0.cov Ctrl_1_1/Ctrl_1_1.cov \
  UVB_0_0/UVB_0_0.cov UVB_0_1/UVB_0_1.cov \
  UVB_1_0/UVB_1_0.cov UVB_1_1/UVB_1_1.cov \
  UAH-UVB_1_0/UAH-UVB_1_0.cov UAH-UVB_1_1/UAH-UVB_1_1.cov
Regions printed: 203688

// annotate regions with ChIPpeakAnno
$ R
> library(ChIPpeakAnno)
> library(TxDb.Mmusculus.UCSC.mm9.knownGene)
> library(org.Mm.eg.db)
> annoData <- annoGR(TxDb.Mmusculus.UCSC.mm9.knownGene, feature="gene")
> comb <- read.table("comb.csv", header=T)
> comb_sub <- comb[,1:3]
> comb_sub$name <- c(1:nrow(comb_sub))
> comb_gr <- toGRanges(comb_sub, format="BED", header=T)
> comb_gr_anno <- annotatePeakInBatch(comb_gr, AnnotationData=annoData,
  select="first", PeakLocForDistance="middle")
> comb_gr_anno2 <- addGeneIDs(annotatedPeak=comb_gr_anno, orgAnn="org.Mm.eg.db",
  feature_id_type="entrez_id", IDs2Add="symbol")
> comb$location <- comb_gr_anno2$insideFeature
> comb$distance <- comb_gr_anno2$distancetoFeature
> comb$gene <- comb_gr_anno2$symbol
> write.table(comb, file="comb_cpa.csv", sep="\t", quote=F, row.names=F)

# filter those within 2kb of gene
> comb_fil <- subset(comb, ! is.na(distance) & abs(distance) <= 2000)
> write.table(comb_fil, file="comb_cpa_lim.csv", sep="\t", quote=F, row.names=F)
# note: previously, I used my own filter.py -- identical results

// comb_cpa.csv: 203688 regions
// comb_cpa_lim.csv: 49532 regions


////////////////////////////////////////////////////////////////////////////////

// Bismark analysis
$ time samtools sort Ctrl_1_0.bam > Ctrl_1_0.sorted.bam
real  6m19.535s
1245162360  Ctrl_1_0.sorted.bam

$ time /home/john/tools/Bismark/bismark_methylation_extractor \
  --single-end --comprehensive --merge_non_CpG --bedGraph \
  Ctrl_1_0.sorted.bam
real	34m23.781s
1929064380  CpG_context_Ctrl_1_0.sorted.txt
28930091749  Non_CpG_context_Ctrl_1_0.sorted.txt
18931801  Ctrl_1_0.sorted.bedGraph.gz
19836123  Ctrl_1_0.sorted.bismark.cov.gz

$ time /home/john/tools/Bismark/coverage2cytosine \
  --genome_folder /home/john/genomes/Mus_musculus/UCSC/mm9/Sequence/WholeGenomeFasta \
  --merge_CpG --output Ctrl_1_0.c2c Ctrl_1_0.sorted.bismark.cov.gz 
real	32m50.240s
1181481834  Ctrl_1_0.c2c
102348972  Ctrl_1_0.c2c.merged_CpG_evidence.cov

$ zcat Ctrl_1_0.sorted.bismark.cov.gz | head
chr10	3001588	3001588	100	1	0
chr10	3001899	3001899	100	2	0
chr10	3001909	3001909	100	2	0
chr10	3002905	3002905	100	2	0
chr10	3002933	3002933	100	2	0
chr10	3011404	3011404	80	8	2
chr10	3011469	3011469	100	6	0
chr10	3011470	3011470	100	5	0
chr10	3011557	3011557	100	2	0
chr10	3011558	3011558	0	0	1

$ head Ctrl_1_0.c2c.merged_CpG_evidence.cov 
chr10	3001587	3001588	100.000000	1	0
chr10	3001899	3001900	100.000000	2	0
chr10	3001909	3001910	100.000000	2	0
chr10	3002905	3002906	100.000000	2	0
chr10	3002933	3002934	100.000000	2	0
chr10	3011404	3011405	80.000000	8	2
chr10	3011469	3011470	100.000000	11	0
chr10	3011557	3011558	66.666667	2	1
chr10	3011581	3011582	100.000000	2	0
chr10	3012041	3012042	100.000000	2	0



////////////////////////////////////////////////////////////////////////

// install ChIPpeakAnno, databases in R
$ sudo R
> source("https://bioconductor.org/biocLite.R")
> biocLite("TxDb.Mmusculus.UCSC.mm9.knownGene")
> biocLite("org.Mm.eg.db")



